# docker image build -t nizbel/bagofgold:cdl -f Dockerfile --add-host=database:localhost .
# Use an official Python runtime as a parent image
FROM python:3.8.2-slim

COPY requirements.txt /home/apn/requirements.txt

WORKDIR /home/apn

# Install any needed packages specified in requirements.txt
RUN pip install iso8601
RUN apt-get update
RUN apt-get install -y build-essential
RUN apt-get install -y python3-dev
RUN apt-get install -y libpq-dev
RUN pip install --trusted-host pypi.python.org -r requirements.txt

EXPOSE 80

# Instalar apache
#RUN apt-get update
RUN apt-get install -y apache2 apache2-utils apache2-dev libexpat1 ssl-cert && apt-get clean

RUN pip install mod_wsgi
RUN mod_wsgi-express module-config >> /etc/apache2/apache2.conf

# Instalar nano
#RUN apt-get install nano

# Postgres
RUN apt-get update && apt-get install -y lsb-release
RUN curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
RUN cat /etc/apt/sources.list.d/pgdg.list
RUN apt-get update && apt-get install -y postgresql-client-11

COPY conf/.pgpass /root/.pgpass
RUN chmod 0600 /root/.pgpass

COPY . /home/apn

COPY conf/settings_prod.py /home/apn/apn/settings.py

# Preparar html
#RUN python manage.py minificar_html

WORKDIR /home/apn/apache_conf
RUN . /home/apn/apache_conf/set-ladder.sh

WORKDIR /home/apn

# Remover pastas nao utilizadas
RUN rm -rf /home/apn/apache_conf
RUN rm -rf /home/apn/static

RUN service apache2 restart

# Run app.py when the container launches
CMD apachectl -D FOREGROUND

